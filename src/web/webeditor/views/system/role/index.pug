include ../../components/input/index.pug
include ../../components/button/search.pug
include ../../components/button/clear.pug
include ../../components/button/new.pug
include ../../components/button/edit.pug
include ../../components/button/delete.pug
include ../../components/orderBy/index.pug

style
  include ../../../styles/datagrid.scss
  include  styles.scss

div.role
  div.box
    form
      div.group
        +Input({ name: "name", value: model.name, title: "Nome", type: "text", })
        +Input({ name: "label", value: model.label, title: "Legenda", type: "text", })
      div.group.right
        +ButtonSearch()
        +ButtonClear()
  div.group.right
    +ButtonNew({ callback: `handleOpenFormModal('${modalId}')`, label: 'Nova Regra', name: '_system_role_edit_button', disabled: true})
  div.box
    div.datagrid
      div.table_container
        table
          thead
            tr
              th.datagrid_left 
                +OrderBy('Nome','name')
              th.datagrid_left 
                +OrderBy('Legenda','label')
              th.datagrid_right 
                +OrderBy('Ordem','sort_order')
              th
                +OrderBy('Criado', 'created_at', true)
              th
                +OrderBy('Atualizado', 'updated_at', true)
              th.datagrid_right Ações
          tbody
            each role in roles
              tr
                td(data-label="Nome") #{role.name}
                td(data-label="Legenda") #{role.label}
                td(data-label="Ordem") #{role.order}
                td(data-label="Criado").datagrid_center #{role.createdAt.toFormat('dd/MM/yyyy')}
                td(data-label="Atualizado").datagrid_center #{role.updatedAt.toFormat('dd/MM/yyyy')}
                td(data-label="Ações").datagrid_right
                  div.datagrid_tools
                    +ButtonEdit({ callback: `handleOpenFormModal('${modalId}', '${role.id}')`, name: '_system_role_edit_button' })
                    +ButtonDelete({ callback: `handleOpenDeleteConfirm('${confirmId}', '${role.id}')`, name: '_system_role_delete_button' })
      |!{pagination(dynamicPugFilePathFromVariable)} 

|!{modal(dynamicPugFilePathFromVariable)}
|!{confirm(dynamicPugFilePathFromVariable)}

script.
  const handleOpenDeleteConfirm = (confirmId, id) => {
    if (id) {
      toggleConfirm(confirmId, `handleDeleteRole('${id}')`);
    }
  }

  const handleDeleteRole = (id) => {
    fetch(`/administrator/roles/${id}`, {
      method: "DELETE",
      headers: {
        "Content-Type": "application/json",
      },
    })
    .then((res) => {
      if (!res.ok) throw new Error('Algo de errado aconteceu.');
      return res.json()
    })
    .then(json => {
      alert('Removido com sucesso');
      document.location.reload();
    })
    .catch((err) => {
      console.error(err);
      alert(err.message);
    });
  }

  _showButtonsWithPermission('WEBEDITOR_ROLE_UPDATE', '_system_role_edit_button')
  _showButtonsWithPermission('WEBEDITOR_ROLE_DELETE', '_system_role_delete_button')